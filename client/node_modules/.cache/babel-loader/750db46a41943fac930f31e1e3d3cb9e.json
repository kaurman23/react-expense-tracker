{"ast":null,"code":"var _jsxFileName = \"/home/graphite/Desktop/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\"; //Initial State\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create Context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Action\n\n  async function getTransaction() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transaction: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransaction,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/graphite/Desktop/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransaction","res","get","type","payload","data","response","deleteTransaction","id","delete","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB,C,CAOA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD0C,CAG1C;;AACA,iBAAeS,cAAf,GAA+B;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAND,CAME,OAAOZ,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;AAFxB,OAAD,CAAR;AAKH;AACJ;;AAGD,iBAAec,iBAAf,CAAiCC,EAAjC,EAAoC;AAChC,QAAI;AACA,YAAMlB,KAAK,CAACmB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACAT,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,oBADD;AAELC,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CAAR;AAKH,KAPD,CAOE,OAAOf,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;AAFxB,OAAD,CAAR;AAIH;AAEJ;;AAED,WAASiB,cAAT,CAAwBC,WAAxB,EAAoC;AAChCZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAIH;;AAED,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EACzB;AAAEA,MAAAA,WAAW,EAAEb,KAAK,CAACN,YAArB;AACAC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADb;AAEAC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFf;AAGAM,MAAAA,cAHA;AAIAO,MAAAA,iBAJA;AAKAG,MAAAA;AALA,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKb,QATL,CADJ;AAaH,CA1DM","sourcesContent":["import React, {createContext, useReducer} from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\"\n\n//Initial State\nconst initialState = {\n    transactions: [\n        ],\n    error: null,\n    loading: true\n}\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //Action\n    async function getTransaction(){\n        try {\n            const res = await axios.get('/api/v1/transactions');\n            dispatch({\n                type: 'GET_TRANSACTION',\n                payload: res.data.data\n            })\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n            \n        }\n    }\n\n\n    async function deleteTransaction(id){\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n        }\n        \n    }\n\n    function addTransaction(transaction){\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return(\n        <GlobalContext.Provider value={\n            { transaction: state.transactions,\n            error: state.error,\n            loading: state.loading,\n            getTransaction,\n            deleteTransaction,\n            addTransaction}\n            \n        } >\n            {children}\n        </GlobalContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}